// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

// datasource db {
//   provider = "postgresql"
//   url      = env("DATABASE_URL")
// }
datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id          String           @id @unique @default(uuid())
  firstName   String
  lastName    String
  email       String           @unique
  phone       String?
  password    String
  dateOfBirth String?
  gender      Gender?
  complete    Boolean          @default(false)
  reset       RestPasswordOTP?
  image       Image?
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
}

model Admin {
  id        String   @id @unique @default(uuid())
  email     String   @unique
  userName  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model RestPasswordOTP {
  id        String   @id @unique @default(uuid())
  codePIN   Int      @unique
  canChange Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String   @unique
  user      User     @relation(fields: [email], references: [email], onDelete: Cascade)
}

model Image {
  id            String   @id @unique @default(uuid())
  url           String
  user          User?    @relation(fields: [userId], references: [id])
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  userId        String?  @unique
}

enum Gender {
  Male
  Female
}
